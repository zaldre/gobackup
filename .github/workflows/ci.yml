name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install dependencies
      run: go mod download
      
    - name: Run unit tests
      run: go test -v ./cmd/...
      
    - name: Run integration tests
      run: go test -v ./test/...
      
    - name: Run tests with coverage
      run: go test -v -coverprofile=coverage.out ./cmd/... ./test/...
      
    - name: Generate coverage report
      run: go tool cover -html=coverage.out -o coverage.html
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        
    - name: Build binary
      run: go build -o backup ./cmd/
      
    - name: Test binary
      run: |
        ./backup --help || true  # Test that binary runs (may fail due to missing args)
        echo "Binary built successfully"
        
    - name: Run linting
      run: |
        go install golang.org/x/lint/golint@latest
        golint ./cmd/...
        
    - name: Run go vet
      run: go vet ./cmd/... ./test/...
      
    - name: Check formatting
      run: go fmt ./cmd/... ./test/...
